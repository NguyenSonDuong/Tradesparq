// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TradesparqDBContext;

#nullable disable

namespace Tradesparq.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250921082604_sua_NULL_3")]
    partial class sua_NULL_3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_unicode_ci")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Tradesparq.Model.Company.Companies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("Uid")
                        .HasColumnType("longtext");

                    b.Property<string>("Uname")
                        .HasColumnType("longtext");

                    b.Property<string>("Var")
                        .HasColumnType("longtext");

                    b.Property<string>("uuid")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("Tradesparq.Model.Info.Cities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int?>("CompaniesId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("TypeInfo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompaniesId");

                    b.ToTable("Cities", (string)null);
                });

            modelBuilder.Entity("Tradesparq.Model.Info.Emails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompaniesId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("TypeInfo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompaniesId");

                    b.ToTable("Emails", (string)null);
                });

            modelBuilder.Entity("Tradesparq.Model.Info.Faxs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompaniesId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("TypeInfo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompaniesId");

                    b.ToTable("Faxs", (string)null);
                });

            modelBuilder.Entity("Tradesparq.Model.Info.PhoneNumbers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompaniesId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("TypeInfo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompaniesId");

                    b.ToTable("PhoneNumbers", (string)null);
                });

            modelBuilder.Entity("Tradesparq.Model.Info.PostalCodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompaniesId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("TypeInfo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompaniesId");

                    b.ToTable("PostalCodes", (string)null);
                });

            modelBuilder.Entity("Tradesparq.Model.Info.Cities", b =>
                {
                    b.HasOne("Tradesparq.Model.Company.Companies", null)
                        .WithMany("City")
                        .HasForeignKey("CompaniesId");
                });

            modelBuilder.Entity("Tradesparq.Model.Info.Emails", b =>
                {
                    b.HasOne("Tradesparq.Model.Company.Companies", null)
                        .WithMany("Email")
                        .HasForeignKey("CompaniesId");
                });

            modelBuilder.Entity("Tradesparq.Model.Info.Faxs", b =>
                {
                    b.HasOne("Tradesparq.Model.Company.Companies", null)
                        .WithMany("Fax")
                        .HasForeignKey("CompaniesId");
                });

            modelBuilder.Entity("Tradesparq.Model.Info.PhoneNumbers", b =>
                {
                    b.HasOne("Tradesparq.Model.Company.Companies", null)
                        .WithMany("PhoneNumber")
                        .HasForeignKey("CompaniesId");
                });

            modelBuilder.Entity("Tradesparq.Model.Info.PostalCodes", b =>
                {
                    b.HasOne("Tradesparq.Model.Company.Companies", null)
                        .WithMany("PostalCode")
                        .HasForeignKey("CompaniesId");
                });

            modelBuilder.Entity("Tradesparq.Model.Company.Companies", b =>
                {
                    b.Navigation("City");

                    b.Navigation("Email");

                    b.Navigation("Fax");

                    b.Navigation("PhoneNumber");

                    b.Navigation("PostalCode");
                });
#pragma warning restore 612, 618
        }
    }
}
